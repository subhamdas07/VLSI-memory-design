module memory(clk, rst, addr, wdata, rdata, wr_en, rd_en);
//2KB memory
	//WIDTH=32
parameter WIDTH=32;  //during simulation it will become 12
  
  `define  WIDTH 32
parameter DEPTH=256;  //2KB/WIDTH = 2*1024*8/32 = 512
parameter ADDR_WIDTH=8;

input wire clk, rst;
input wire [ADDR_WIDTH-1:0] addr;
input wire [WIDTH-1:0] wdata;
output reg [WIDTH-1:0] rdata;
input wire wr_en, rd_en;

integer i;

reg [WIDTH-1:0] mem [DEPTH-1:0]; //to access 128 locations: 7 bits are required
//index starts from 0 till 127
//we need to provide way to access the memory : ports

always @(posedge clk) begin
	if (rst == 1) begin
		//reset memory
		//mem = 0;
		rdata = 0;
		for (i = 0; i <= DEPTH-1; i=i+1) begin
			mem[i] = 0;
		end
	end
	else begin
		if (wr_en == 1) begin
			mem[addr] = wdata;
		end
		if (rd_en == 1) begin
			rdata = mem[addr];
		end
	end
end

endmodule